name: Docker Build and Push

on:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: '0 3 1 * *'  # Monthly on 1st at 3 AM UTC
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read version
        id: version
        run: |
          VERSION=$(cat release.txt)
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          COMMIT=$(git rev-parse --short HEAD)
          echo "COMMIT=${COMMIT}" >> $GITHUB_OUTPUT
          BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.version.outputs.VERSION }}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.VERSION }}
            COMMIT=${{ steps.version.outputs.COMMIT }}
            BUILD_DATE=${{ steps.version.outputs.BUILD_DATE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify images
        run: |
          echo "Images pushed:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n'

          echo ""
          echo "Pull command:"
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}"

      - name: Image digest
        run: echo ${{ steps.build.outputs.digest }}
